// Generated by CoffeeScript 1.9.2
(function() {
  this.D3Line = (function() {
    function D3Line(svgElement, data1, data2) {
      this.svgElement = svgElement;
      this.data1 = data1;
      this.data2 = data2;
      this.dataset1 = this.data1;
      this.dataset2 = this.data2;
      this.width = this.svgElement.clientWidth;
      this.height = this.svgElement.clientHeight;
      this.visualization = d3.select(this.svgElement);
      this.margins = {
        top: 20,
        right: 20,
        bottom: 20,
        left: 50
      };
    }

    D3Line.prototype.draw = function() {
      var linedata1, linedata2;
      this._set_scale();
      this._set_axis();
      linedata1 = this._getLineData1();
      linedata2 = this._getLineData2();
      this._draw_line(linedata1, linedata2);
      return this._animatePath();
    };

    D3Line.prototype._set_scale = function() {
      this.xScale = d3.scale.linear().range([this.margins.left, this.width - this.margins.right]).domain([2000, 2010]);
      return this.yScale = d3.scale.linear().range([this.height - this.margins.bottom, this.margins.top]).domain([134, 215]);
    };

    D3Line.prototype._set_axis = function() {
      this.xaxis = this.visualization.append("svg:g").attr("class", "x axis").attr("transform", "translate(0," + (this.height - this.margins.bottom) + ")");
      this.yaxis = this.visualization.append("svg:g").attr("class", "y axis").attr("transform", "translate(" + this.margins.left + ",0)");
      this._set_axis_scale();
      return this._call_axis();
    };

    D3Line.prototype._set_axis_scale = function() {
      this.xAxis = d3.svg.axis().scale(this.xScale);
      return this.yAxis = d3.svg.axis().scale(this.yScale).orient("left");
    };

    D3Line.prototype._call_axis = function() {
      this.xaxis.call(this.xAxis);
      return this.yaxis.call(this.yAxis);
    };

    D3Line.prototype._setresponsive = function() {
      var linedata1, linedata2;
      this._set_scale();
      this._set_axis_scale();
      this._call_axis();
      linedata1 = this._getLineData1();
      linedata2 = this._getLineData2();
      this._updataLineData(linedata1, linedata2);
      return this._updateAnimate();
    };

    D3Line.prototype._updataLineData = function(linedata1, linedata2) {
      this.dataset1line.attr('d', linedata1);
      return this.dataset2line.attr('d', linedata2);
    };

    D3Line.prototype._draw_line = function(line1data, line2data) {
      this.dataset1line = this.visualization.append('svg:path').attr('stroke', 'green').attr('stroke-width', 2).attr('fill', 'none').attr('d', line1data);
      return this.dataset2line = this.visualization.append('svg:path').attr('stroke', 'blue').attr('stroke-width', 2).attr('fill', 'none').attr('d', line2data);
    };

    D3Line.prototype._genLine = function() {
      var _this;
      _this = this;
      return d3.svg.line().x(function(d) {
        return _this.xScale(d.year);
      }).y(function(d) {
        return _this.yScale(d.sale);
      });
    };

    D3Line.prototype._getLineData1 = function() {
      var genLine;
      genLine = this._genLine();
      return genLine(this.dataset1);
    };

    D3Line.prototype._getLineData2 = function() {
      var genLine;
      genLine = this._genLine();
      return genLine(this.dataset2);
    };

    D3Line.prototype._getLine1TotalLength = function() {
      return this.dataset1line.node().getTotalLength();
    };

    D3Line.prototype._getLine2TotalLength = function() {
      return this.dataset1line.node().getTotalLength();
    };

    D3Line.prototype._animatePath = function() {
      this.totalLength1 = this._getLine1TotalLength();
      this.totalLength2 = this._getLine2TotalLength();
      this.dataset1line.attr("stroke-dasharray", this.totalLength1 + " " + this.totalLength1).attr("stroke-dashoffset", this.totalLength1).transition().duration(1000).ease("linear").attr("stroke-dashoffset", 0);
      return this.dataset2line.attr("stroke-dasharray", this.totalLength2 + " " + this.totalLength2).attr("stroke-dashoffset", this.totalLength2).transition().duration(1000).ease("linear").attr("stroke-dashoffset", 0);
    };

    D3Line.prototype._updateAnimate = function() {
      this.dataset1line.attr("stroke-dasharray", 0).attr("stroke-dashoffset", 0);
      return this.dataset2line.attr("stroke-dasharray", 0).attr("stroke-dashoffset", 0);
    };

    return D3Line;

  })();

}).call(this);

//# sourceMappingURL=d3line.js.map
